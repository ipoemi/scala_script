/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ipoemi' at '16. 3. 17 �삤�썑 5:02' with Gradle 2.11
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.11/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'scala'
apply plugin: 'java'
apply plugin: "application"
apply plugin: "eclipse"

ext {
	scalaVersion = '2.11.7'
	scalaLibVersion = '2.11'
}

// In this section you declare where to find the dependencies of your project
repositories {
	// Use 'jcenter' for resolving your dependencies.
	// You can declare any Maven/Ivy/file repository here.
	jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {

	compile "org.scala-lang:scala-library:$scalaVersion"
	compile "org.scala-lang:scala-reflect:$scalaVersion"

	//compile "com.typesafe.akka:akka-actor_$scalaLibVersion:2.4.2"

	compile "com.fasterxml.jackson.module:jackson-module-scala_$scalaLibVersion:2.7.3"

	compile fileTree(dir: 'lib', include: '*.jar')

	// The production code uses the SLF4J logging API at compile time
	// compile 'org.codehaus.groovy:groovy-all:2.3.10'
	//compile 'org.slf4j:slf4j-api:1.7.14'

	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.
	//testCompile 'junit:junit:4.12'
}

mainClassName = "Main"

task script(type:Exec) {
	workingDir 'src'
	
	args "cmd", "/c", "scala", "${mainClassName}.scala"

	//on windows:
	commandLine args

	//store the output instead of printing to the console:
	//standardOutput = new ByteArrayOutputStream()

	//extension method stopTomcat.output() can be used to obtain the output:
	//ext.output = { return standardOutput.toString() }
}

defaultTasks "run"
